Ejercicio 1

Escribe una función llamada calcular_promedio que tome una lista de números como argumento y devuelva el promedio de esos números. 
Luego, invoca la función con una lista de números de tu elección y muestra el resultado por pantalla.

--------------------------------------------------------------------------------------------------------------

Ejercicio 2

Escribe una función llamada contar_vocales que tome una cadena de texto como argumento y devuelva la cantidad de apariciones de cada vocal (a, e, i, o, u) 
en la cadena en forma de una lista de conteo de vocales. Cada elemento de la lista representará la cantidad de veces que aparece una vocal en el siguiente orden: [a, e, i, o, u]. 
Luego, invoca la función con una cadena de texto de tu elección y muestra la lista de conteo por pantalla.

--------------------------------------------------------------------------------------------------------------

Ejercicio 3

Escribe un programa que pida al usuario un número entero positivo mayor que 1 y luego imprima todos los números primos hasta ese número. 
Utiliza estructuras de control como bucles y condicionales para implementar la lógica del programa.

--------------------------------------------------------------------------------------------------------------

Ejercicio 4

Escribe un programa que pida al usuario un número entero positivo mayor que 1 y luego genere la secuencia de Fibonacci hasta ese número. 
La secuencia de Fibonacci es una serie de números en la que cada número es la suma de los dos números anteriores. 
Utiliza estructuras de control como bucles, condicionales y listas para implementar la lógica del programa.

--------------------------------------------------------------------------------------------------------------

Ejercicio 5

Escribe un programa que solicite al usuario un número entero positivo mayor que 1 y luego calcule la suma de todos los números pares e impares hasta ese número por separado. 
Utiliza estructuras de control como bucles, condicionales y variables para implementar la lógica del programa.